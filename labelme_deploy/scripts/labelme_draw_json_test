#!/usr/bin/env python

import argparse
import json
import matplotlib.pyplot as plt

import utils
import numpy as np
import PIL.Image
import PIL.ImageDraw

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('json_file')
    args = parser.parse_args()

    json_file = args.json_file

    data = json.load(open(json_file))

    img = utils.img_b64_to_array(data['imageData'])
#    lbl, lbl_names = utils.labelme_shapes_to_label(img.shape, data['shapes'])

#    lbl_viz = utils.draw_label(lbl, img, lbl_names)

#    plt.imshow(lbl_viz)
#    plt.show()
    
    shapes = data['shapes']
    img_shape = img.shape
#polygons_to_mask function
    label_name_to_val = {'Background': 0}
    lbl = np.zeros(img_shape[:2], dtype=np.uint8)

#    lbl = np.zeros(img_shape[:2], dtype=np.uint8) #change dtype to np.uint8
    for shape in sorted(shapes, key=lambda x: x['label']):
        polygons = shape['points']
        label_name = shape['label']

        if label_name in label_name_to_val:
            label_value = label_name_to_val[label_name]

        else:
            label_value = len(label_name_to_val)   
            label_name_to_val[label_name] = label_value

        print label_name, label_value
#        mask = polygons_to_mask(img_shape[:2], polygons)

        mask = np.zeros(img_shape[:2], dtype=np.uint8)
        mask = PIL.Image.fromarray(mask)
        xy = list(map(tuple, polygons))
        PIL.ImageDraw.Draw(mask).polygon(xy=xy, outline=1, fill=1)
        mask = np.array(mask, dtype=bool)
        lbl[mask] = label_value

    print label_name_to_val    
    print label_name_to_val.values()

    lbl_names = [None] * (max(label_name_to_val.values()) + 1)
    for label_name, label_value in label_name_to_val.items():
        lbl_names[label_value] = label_name

    print lbl_names 

    print lbl
    np.savetxt('test_lbl.txt',lbl,fmt = "%d",delimiter=",")
    lbl_visulization = PIL.Image.fromarray(lbl)
    plt.imshow(lbl_visulization, cmap='gray')
    plt.show()

if __name__ == '__main__':
    main()
